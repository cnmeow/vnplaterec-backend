name: "Security"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '21 6 * * 6'

jobs:
  codeQL:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
        build-mode: none

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:python"
  
    - name: SonarQubeScan
      uses: SonarSource/sonarqube-scan-action@v4
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: OWSAP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      with:
        project: 'test'
        path: '.'
        format: 'HTML'
        out: 'reports' # this is the default, no need to specify unless you wish to override it
        args: >
          --failOnCVSS 7
          --enableRetired
    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
          name: Depcheck report
          path: ${{github.workspace}}/reports

    # Build & push image to Docker Hub
    - name: Set timestamp
      run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: '${{ vars.DOCKERHUB_USERNAME }}/vnplaterec-backend:${{ env.TIMESTAMP }}'
  
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
      with:
        image-ref: 'docker.io/${{ vars.DOCKERHUB_USERNAME }}/vnplaterec-backend:${{ env.TIMESTAMP }}'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }} 
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Security'
        SLACK_TITLE: Security
        SLACK_USERNAME: github
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}