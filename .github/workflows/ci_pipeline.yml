name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  set-timestamp:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.set-timestamp.outputs.timestamp }}
    steps:
      - id: set-timestamp
        run: echo "::set-output name=timestamp::$(date +%s)"

  tests:
    uses: ./.github/workflows/test.yml
    permissions:
      security-events: write

  analysis:
    needs: tests
    uses: ./.github/workflows/source_analysis.yml
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    permissions:
      security-events: write

  dockertrivy:
    needs: [set-timestamp, analysis]
    uses: ./.github/workflows/docker_trivy.yml
    with:
      DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
      TIMESTAMP: ${{ needs.set-timestamp.outputs.timestamp }}
    secrets:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    permissions:
      security-events: write

  update-values:
    name: "Update values in helm chart repo"
    needs: [set-timestamp, dockertrivy]
    runs-on: ubuntu-latest
    if: ${{ !contains(needs.*.result, 'failure') }}

    steps:
      - name: Checkout Helm chart repo
        uses: actions/checkout@v4
        with:
          repository: cnmeow/vnplaterec-helmchart
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: helm-chart

      - name: Update values.yaml
        run: |
          cd helm-chart/charts/backend
          yq e -i ".image.tag = \"${{ needs.set-timestamp.outputs.timestamp }}\"" values.yaml

      - name: Commit and push
        run: |
          cd helm-chart
          git config user.name "github-actions"
          git config user.email "ci@github.com"
          git add .
          git commit -m "ci: update image tag to ${{ needs.set-timestamp.outputs.timestamp }}"
          git push

  notify:
    name: Slack Notification
    needs: [tests, analysis, dockertrivy]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Notify Slack if Failure
        if: contains(needs.*.result, 'failure')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: danger
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_USERNAME: vnplaterec-backend
          SLACK_TITLE: ‚ùå CI Pipeline Failed
          SLACK_MESSAGE: |
            üö® *Workflow failed!*  
            ‚Ä¢ Repository: ${{ github.repository }}  
            ‚Ä¢ Branch: ${{ github.ref }}  
            ‚Ä¢ Commit: ${{ github.sha }}  
            ‚Ä¢ Triggered by: ${{ github.actor }}  
            ‚Ä¢ Job: ${{ github.job }}  
            ‚Ä¢ Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Notify Slack if Success
        if: ${{ !contains(needs.*.result, 'failure') }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: good
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_USERNAME: vnplaterec-backend
          SLACK_TITLE: ‚úÖ CI Pipeline Success
          SLACK_MESSAGE: "All jobs passed successfully!"